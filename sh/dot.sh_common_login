# Common rc file for login shells
# Environment detection  #{{{1

# What machine am I working on?
export ENV_WORKING='halley'  # Home - MacBook


# What machine am I using to access $ENV_WORKING?
  # FIXME: How to detect the right value?
  # Currently, I don't often work with situations such as ENV_ACCESS !=
  # ENV_WORKING.  So that it's useful to assume that both of them are the same.
export ENV_ACCESS="$ENV_WORKING"




# PATH  #{{{1

export PATH MANPATH INFOPATH

if [ "${PATH/$HOME/}" = "$PATH" ]; then  # if $HOME/bin is not in $PATH ...
  # To use own versions prior to default (e.g. sed installed by homebrew)
  PATH="/usr/local/bin:${PATH/\/usr\/local\/bin:/}"

  # To use coreutils, installed by homebrew, without the prefix "g".
  if which brew >/dev/null; then
    PATH="$(brew --prefix coreutils)/libexec/gnubin:$PATH"
  fi

  # for stack
  if [ -d "$HOME/.local/bin" ]; then PATH="$HOME/.local/bin:$PATH"; fi

  # for my own tools
  if [ -d "$HOME/bin" ]; then PATH="$HOME/bin:$PATH"; fi
  if [ -d "$HOME/man" ]; then MANPATH="$HOME/man:$MANPATH"; fi
  if [ -d "$HOME/share/man" ]; then MANPATH="$HOME/share/man:$MANPATH"; fi
  if [ -d "$HOME/info" ]; then INFOPATH="$HOME/info:$INFOPATH"; fi
fi

# Max OS X El Capitan makes things complicated again.  See also sh/dot.zshenv.
if [ "$CUSTOM_PATH" != '' ]  # Is the current process a subshell?
then
  PATH="$CUSTOM_PATH"
fi




# Misc.  #{{{1
# Common stuffs  #{{{2
export EDITOR=vim
export PAGER=less


# less  #{{{2
# -P '[?eEOF:?pB%pB\%..]  .?f%f:(stdin).?m (%i of %m).?lb  %lb?L/%L..'
# TODO: What I really want is --no-init-if-one-screen to combine with
# --quit-if-one-screen, but it doesn't exist.
export LESS='-P [?eEOF:?PB%PB\%..]'




# Last resort  #{{{1
# VVM: Vim Version Manager  #{{{2
[[ -s "$HOME/.vvm/etc/login" ]] && source "$HOME/.vvm/etc/login"


# rbenv  #{{{2
if [[ -d $HOME/.rbenv ]]; then
  PATH=$HOME/.rbenv/bin:$PATH
  eval "$(rbenv init - --no-rehash zsh)"
fi

# Go  #{{{2
[[ -s "$HOME/.gvm/etc/login" ]] && source "$HOME/.gvm/etc/login"
export GOPATH=$HOME
# Why this line is commented is that $HOME/bin is already exported
# PATH=$GOPATH/bin:$PATH


# ghq  #{{{2
export GHQ_ROOT=$GOPATH/src


# Workaround for Mac OS Lion's /etc/zshenv  #{{{2
# See also dot.zshenv.
export CUSTOM_PATH="$PATH"




# __END__  #{{{1
# vim: filetype=sh foldmethod=marker
